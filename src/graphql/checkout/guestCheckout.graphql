query checkUserIsAuthed($cartId: String!) {
  cart(cart_id: $cartId) {
    id
    __typename
  }
}

mutation CreateAccountAfterCheckout(
  $email: String!
  $firstname: String!
  $lastname: String!
  $password: String!
  $is_subscribed: Boolean!
) {
  createCustomer(
    input: {
      email: $email
      firstname: $firstname
      lastname: $lastname
      password: $password
      is_subscribed: $is_subscribed
    }
  ) {
    customer {
      email
      __typename
    }
    __typename
  }
}

mutation SignInAfterCheckout($email: String!, $password: String!) {
  generateCustomerToken(email: $email, password: $password) {
    token
    __typename
  }
}

query accountChipQuery {
  customer {
    firstname
    __typename
  }
}

query GetCustomerForCheckout {
  customer {
    default_shipping
    firstname
    __typename
  }
}

mutation CreateCartAfterCheckout {
  cartId: createEmptyCart
}
query GetCartDetailsAfterCheckout($cartId: String!) {
  cart(cart_id: $cartId) {
    id
    items {
      uid
      prices {
        price {
          value
          __typename
        }
        __typename
      }
      product {
        uid
        name
        sku
        small_image {
          url
          label
          __typename
        }
        price {
          regularPrice {
            amount {
              value
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      quantity
      ... on ConfigurableCartItem {
        configurable_options {
          configurable_product_option_uid
          option_label
          configurable_product_option_value_uid
          value_label
          __typename
        }
        __typename
      }
      __typename
    }
    prices {
      grand_total {
        value
        currency
        __typename
      }
      __typename
    }
    __typename
  }
}

query GetCustomerAfterCheckout {
  customer {
    email
    firstname
    lastname
    is_subscribed
    __typename
  }
}

mutation SetGuestShipping($cartId: String!, $email: String!, $address: CartAddressInput!) {
  setGuestEmailOnCart(input: { cart_id: $cartId, email: $email }) {
    cart {
      id
      __typename
    }
    __typename
  }
  setShippingAddressesOnCart(input: { cart_id: $cartId, shipping_addresses: [{ address: $address }] }) {
    cart {
      id
      ...ShippingInformationFragment
      ...ShippingMethodsCheckoutFragment
      ...PriceSummaryFragment
      ...AvailablePaymentMethodsFragment
      __typename
    }
    __typename
  }
}

fragment ShippingInformationFragment on Cart {
  id
  email
  shipping_addresses {
    city
    country {
      code
      label
      __typename
    }
    firstname
    lastname
    postcode
    region {
      code
      label
      region_id
      __typename
    }
    street
    telephone
    __typename
  }
  __typename
}

fragment ShippingMethodsCheckoutFragment on Cart {
  id
  ...AvailableShippingMethodsCheckoutFragment
  ...SelectedShippingMethodCheckoutFragment
  shipping_addresses {
    country {
      code
      __typename
    }
    postcode
    region {
      code
      __typename
    }
    street
    __typename
  }
  __typename
}

fragment AvailableShippingMethodsCheckoutFragment on Cart {
  id
  shipping_addresses {
    available_shipping_methods {
      amount {
        currency
        value
        __typename
      }
      available
      carrier_code
      carrier_title
      method_code
      method_title
      __typename
    }
    street
    __typename
  }
  __typename
}

fragment SelectedShippingMethodCheckoutFragment on Cart {
  id
  shipping_addresses {
    selected_shipping_method {
      amount {
        currency
        value
        __typename
      }
      carrier_code
      method_code
      method_title
      __typename
    }
    street
    __typename
  }
  __typename
}

fragment DiscountSummaryFragment on CartPrices {
  discounts {
    amount {
      currency
      value
      __typename
    }
    label
    __typename
  }
  __typename
}

fragment GrandTotalFragment on CartPrices {
  grand_total {
    currency
    value
    __typename
  }
  __typename
}

fragment ShippingSummaryFragment on Cart {
  id
  shipping_addresses {
    selected_shipping_method {
      amount {
        currency
        value
        __typename
      }
      __typename
    }
    street
    __typename
  }
  __typename
}

fragment TaxSummaryFragment on CartPrices {
  applied_taxes {
    amount {
      currency
      value
      __typename
    }
    __typename
  }
  __typename
}

fragment AvailablePaymentMethodsFragment on Cart {
  id
  available_payment_methods {
    code
    title
    __typename
  }
  __typename
}

query getOrderDetails($cartId: String!) {
  cart(cart_id: $cartId) {
    id
    ...OrderConfirmationPageFragment
    __typename
  }
}

query getItemCount($cartId: String!) {
  cart(cart_id: $cartId) {
    id
    ...CartTriggerFragment
    __typename
  }
}

fragment CartTriggerFragment on Cart {
  id
  total_quantity
  __typename
}

query getCheckoutDetails($cartId: String!) {
  cart(cart_id: $cartId) {
    id
    ...CheckoutPageFragment
    ...ItemsReviewFragment
    __typename
  }
}

fragment CheckoutPageFragment on Cart {
  id
  items {
    uid
    product {
      uid
      stock_status
      __typename
    }
    __typename
  }
  total_quantity
  available_payment_methods {
    code
    __typename
  }
  __typename
}

mutation CreateAccountAfterCheckout(
  $email: String!
  $firstname: String!
  $lastname: String!
  $password: String!
  $is_subscribed: Boolean!
) {
  createCustomer(
    input: {
      email: $email
      firstname: $firstname
      lastname: $lastname
      password: $password
      is_subscribed: $is_subscribed
    }
  ) {
    customer {
      email
      __typename
    }
    __typename
  }
}

mutation SignInAfterCheckout($email: String!, $password: String!) {
  generateCustomerToken(email: $email, password: $password) {
    token
    __typename
  }
}

query accountChipQuery {
  customer {
    firstname
    __typename
  }
}

query GetCustomerForCheckout {
  customer {
    default_shipping
    firstname
    __typename
  }
}

mutation CreateCartAfterCheckout {
  cartId: createEmptyCart
}

query getItemCount($cartId: String!) {
  cart(cart_id: $cartId) {
    id
    ...CartTriggerFragment
    __typename
  }
}

fragment CartTriggerFragment on Cart {
  id
  total_quantity
  __typename
}

query GetCustomerAfterCheckout {
  customer {
    email
    firstname
    lastname
    is_subscribed
    __typename
  }
}

query GetCartDetailsAfterCheckout($cartId: String!) {
  cart(cart_id: $cartId) {
    id
    items {
      uid
      prices {
        price {
          value
          __typename
        }
        __typename
      }
      product {
        uid
        name
        sku
        small_image {
          url
          label
          __typename
        }
        price {
          regularPrice {
            amount {
              value
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      quantity
      ... on ConfigurableCartItem {
        configurable_options {
          configurable_product_option_uid
          option_label
          configurable_product_option_value_uid
          value_label
          __typename
        }
        __typename
      }
      __typename
    }
    prices {
      grand_total {
        value
        currency
        __typename
      }
      __typename
    }
    __typename
  }
}
